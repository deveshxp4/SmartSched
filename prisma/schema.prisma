generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "mysql"
url      = env("DATABASE_URL")
}

model users {
id          Int              @id @default(autoincrement())
name        String?          @db.VarChar(100)
email       String?          @unique @db.VarChar(100)
password    String?          @db.VarChar(200)
created_at  DateTime?        @default(now()) @db.Timestamp(6)
timetables  Timetable[]      // Relation to timetables
completions TaskCompletion[] // Relation to task completions
stats       TaskStats[]      // Relation to task statistics
}

model Timetable {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       users    @relation(fields: [user_id], references: [id])
  weekdays   Json
  weekends   Json
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model TaskCompletion {
  id          Int      @id @default(autoincrement())
  user_id     Int
  user        users    @relation(fields: [user_id], references: [id])
  task_id     String   // Unique identifier for the task (time slot + task name)
  date        DateTime @db.Date // The date of completion
  completed   Boolean  @default(true)
  created_at  DateTime @default(now()) @db.Timestamp(6)

  @@unique([user_id, task_id, date]) // Ensure each task is completed only once per day per user
}

model TaskStats {
  id                Int      @id @default(autoincrement())
  user_id           Int
  user              users    @relation(fields: [user_id], references: [id])
  date              DateTime @db.Date // The date of the statistics
  total_tasks       Int      // Total number of tasks scheduled for the day
  completed_tasks   Int      // Number of tasks completed
  completion_rate   Float    // Percentage of task completion (0-100)
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @updatedAt @db.Timestamp(6)

  @@unique([user_id, date]) // Ensure only one stats entry per user per day
}
